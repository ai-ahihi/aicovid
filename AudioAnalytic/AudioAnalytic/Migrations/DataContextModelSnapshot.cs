// <auto-generated />
using System;
using AudioAnalytic.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AudioAnalytic.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AudioAnalytic.Entities.AudioDetail", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("AgeRaw")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileRaw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<long>("Time")
                        .HasColumnType("bigint");

                    b.HasKey("Uuid");

                    b.ToTable("AudioDetail");
                });

            modelBuilder.Entity("AudioAnalytic.Entities.FileFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Feature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileRaw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSpec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicTestUuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PublicTrainUuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RootFile")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Time")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PublicTestUuid");

                    b.HasIndex("PublicTrainUuid");

                    b.HasIndex("RootFile");

                    b.ToTable("FileFeature");
                });

            modelBuilder.Entity("AudioAnalytic.Entities.PublicTest", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("AgeRaw")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileRaw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<long>("Time")
                        .HasColumnType("bigint");

                    b.HasKey("Uuid");

                    b.ToTable("PublicTest");
                });

            modelBuilder.Entity("AudioAnalytic.Entities.PublicTrain", b =>
                {
                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("AgeRaw")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileRaw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<long>("Time")
                        .HasColumnType("bigint");

                    b.HasKey("Uuid");

                    b.ToTable("PublicTrain");
                });

            modelBuilder.Entity("AudioAnalytic.Entities.FileFeature", b =>
                {
                    b.HasOne("AudioAnalytic.Entities.PublicTest", null)
                        .WithMany("FileFeatures")
                        .HasForeignKey("PublicTestUuid");

                    b.HasOne("AudioAnalytic.Entities.PublicTrain", null)
                        .WithMany("FileFeatures")
                        .HasForeignKey("PublicTrainUuid");

                    b.HasOne("AudioAnalytic.Entities.AudioDetail", "AudioDetail")
                        .WithMany("FileFeatures")
                        .HasForeignKey("RootFile");

                    b.Navigation("AudioDetail");
                });

            modelBuilder.Entity("AudioAnalytic.Entities.AudioDetail", b =>
                {
                    b.Navigation("FileFeatures");
                });

            modelBuilder.Entity("AudioAnalytic.Entities.PublicTest", b =>
                {
                    b.Navigation("FileFeatures");
                });

            modelBuilder.Entity("AudioAnalytic.Entities.PublicTrain", b =>
                {
                    b.Navigation("FileFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
